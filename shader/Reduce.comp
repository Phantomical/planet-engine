#version 430

// The size of the workgroup
// this must be a power of 2
#define SIZE 32

layout (local_size_x = SIZE) in;

// The total size of the computation
layout(location = 0) uniform uint size;

layout(binding = 0, std430) buffer Input
{
	float values[];
};
layout(binding = 1, std430) buffer Output
{
	float results[];
};

shared float temp[SIZE];

void main()
{
	uint index = gl_WorkGroupId.z * gl_NumWorkGroups.x * gl_NumWorkGroups.y
		+ gl_WorkGroupID.y * gl_NumWorkGroups.x
		+ gl_WorkGroupID.z + gl_LocalInvocationIndex;
		
	uint localindex = index % size;

	if (index < size)
		temp[localindex] = values[index];
	else
		temp[localindex] = 0.0;

	memoryBarrierShared();
	barrier();

	for (uint i = 1, div = (SIZE >> 1); div != 1; ++i)
	{
		div = (SIZE >> i);
		if (localindex < div)
		{
			temp[localindex] = max(temp[localindex], temp[localindex + div]);
		}

		memoryBarrierShared();
		barrier();
	} 

	if (localindex == 0)
	{
		results[localindex / SIZE] = temp[0];
	}
}

